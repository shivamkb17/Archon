version: '3.8'
services:
  archon-server:
    image: 'ghcr.io/shivamkb17/archon-server:latest'
    container_name: archon-server
    restart: always
    environment:
      - SERVICE_URL_ARCHON_SERVER_8181
      - 'SUPABASE_URL=${SUPABASE_URL:?}'
      - 'SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:?}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY:-}'
      - 'LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}'
      - SERVICE_DISCOVERY_MODE=docker_compose
      - 'LOG_LEVEL=${LOG_LEVEL:-INFO}'
      - ARCHON_SERVER_PORT=8181
      - ARCHON_MCP_PORT=8051
      - ARCHON_AGENTS_PORT=8052
      - 'AGENTS_ENABLED=${AGENTS_ENABLED:-false}'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    command:
      [
        "python",
        "-m",
        "uvicorn",
        "src.server.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "${ARCHON_SERVER_PORT:-8181}",
        "--reload",
      ]
    healthcheck:
      test:
        - CMD
        - sh
        - '-c'
        - 'python -c "import urllib.request; urllib.request.urlopen(''http://localhost:8181/health'')"'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  archon-mcp:
    image: 'ghcr.io/shivamkb17/archon-mcp:latest'
    container_name: archon-mcp
    restart: always
    environment:
      - SERVICE_URL_ARCHON_MCP_8051
      - 'SUPABASE_URL=${SUPABASE_URL:?}'
      - 'SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:?}'
      - 'LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}'
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - 'LOG_LEVEL=${LOG_LEVEL:-INFO}'
      - 'API_SERVICE_URL=http://archon-server:8181'
      - 'AGENTS_ENABLED=${AGENTS_ENABLED:-false}'
      - 'AGENTS_SERVICE_URL=http://archon-agents:8052'
      - ARCHON_MCP_PORT=8051
      - ARCHON_SERVER_PORT=8181
      - ARCHON_AGENTS_PORT=8052
    depends_on:
      - archon-server
    healthcheck:
      test:
        - CMD
        - sh
        - '-c'
        - 'python -c "import socket; s=socket.socket(); s.connect((''localhost'', 8051)); s.close()"'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  archon-agents:
    image: 'ghcr.io/shivamkb17/archon-agents:latest'
    container_name: archon-agents
    restart: always
    environment:
      - SERVICE_URL_ARCHON_AGENTS_8052
      - 'SUPABASE_URL=${SUPABASE_URL:?}'
      - 'SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:?}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY:-}'
      - 'LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}'
      - SERVICE_DISCOVERY_MODE=docker_compose
      - 'LOG_LEVEL=${LOG_LEVEL:-INFO}'
      - ARCHON_AGENTS_PORT=8052
      - ARCHON_SERVER_PORT=8181
    depends_on:
      - archon-server
    healthcheck:
      test:
        - CMD
        - sh
        - '-c'
        - 'python -c "import urllib.request; urllib.request.urlopen(''http://localhost:8052/health'')"'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  archon-frontend:
    image: 'ghcr.io/shivamkb17/archon-frontend:latest'
    container_name: archon-ui
    restart: always
    environment:
      - SERVICE_URL_ARCHON_3737
      - 'VITE_API_URL=http://archon-server:8181'
      - 'VITE_ARCHON_SERVER_PORT=8181'
      - ARCHON_SERVER_PORT=8181
      - 'HOST=${HOST:-localhost}'
      - 'PROD=${PROD:-false}'
      - 'VITE_ALLOWED_HOSTS=${VITE_ALLOWED_HOSTS:-}'
      - 'VITE_SHOW_DEVTOOLS=${VITE_SHOW_DEVTOOLS:-false}'
    depends_on:
      - archon-server
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:3737'
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.http.middlewares.myapp-auth.basicauth.users=shivam:$apr1$1BTGHlJT$7RXhRvjMFXASXE.5mzBB11"
      - "traefik.http.routers.myapp.middlewares=myapp-auth"